table(data[["use_channelsr1"]])
table(data[["use_channelsr1"]]) %>% as_tibble()
table(data[["use_channelsr1"]]) %>% as.data.fram()
table(data[["use_channelsr1"]]) %>% as.data.frame()
table(data[["use_channelsr1"]]) %>% as.data.frame() %>% as_tibble()
?table
table(data[["use_channelsr1"]], data[["use_channelsr2"]]) %>% as.data.frame() %>% as_tibble()
table(data[["use_channelsr1"]]) %>% as.data.frame() %>% as_tibble()
table(data[["use_channelsr1"]]) %>% as.data.frame() %>% as_tibble()
quo_var <- quo(use_channelsr1)
chr_var <- quo_var %>% as_name()
table(data[["use_channelsr1"]]) %>%
as.data.frame() %>%
as_tibble()
table(data[[chr_var]]) %>%
as.data.frame() %>%
as_tibble()
?rename
spss_freq <- function(data, var, na.rm = TRUE) {
quo_var <- enquo(var)
chr_var <- quo_var %>% as_name()
table(data[[chr_var]]) %>%
as.data.frame() %>%
as_tibble() %>%
rename(!!quo_var = Var1)
table(data[[chr_var]]) %>%
as.data.frame() %>%
as_tibble() %>%
rename(!!quo_var = Var1)
table(data[[chr_var]]) %>%
as.data.frame() %>%
as_tibble() %>%
rename(!!quo_var := Var1)
table_df <- table(data[[chr_var]]) %>%
as.data.frame() %>%
as_tibble() %>%
rename(!!quo_var := Var1)
table_df <- table(data[[chr_var]], useNA = "always") %>%
as.data.frame() %>%
as_tibble() %>%
rename(!!quo_var := Var1)
table_df
na.rm = FALSE
totals_df <- totals(data, !!quo_var, na.rm = na.rm)
totals_df
na.rm <- TRUE
totals_df <- totals(data, !!quo_var, na.rm = na.rm)
totals_df
?totals()
totals(data, use_channelsr1, TRUE)
totals(data, use_channelsr1, FALSE)
totals(data, use_channelsr6, FALSE)
totals(data, use_channelsr6, TRUE)
totals(data, cv_channelsr1, TRUE)
totals(data, cv_channelsr1, FALSE)
totals
totals_df <- totals(data, !!quo_var, na.rm = na.rm)
table_df %>%
full_join(totals_df, by = chr_var)
totals_df
table_df
table_df %>%
full_join(totals_df, by = chr_var)
table_df
totals_df
totals_df <- totals(data, !!quo_var, na.rm = na.rm) %>%
rename(percent = value)
table_df %>%
full_join(totals_df, by = chr_var)
table_df <- table(data[[chr_var]], useNA = "always") %>%
as.data.frame() %>%
as_tibble() %>%
rename(!!quo_var := Var1,
Frequency = Freq)
totals_df <- totals(data, !!quo_var, na.rm = na.rm) %>%
rename(percent = value)
table_df %>%
full_join(totals_df, by = chr_var)
table_df <- table(data[[chr_var]], useNA = "always") %>%
as.data.frame() %>%
as_tibble() %>%
rename(!!quo_var := Var1,
frequency = Freq)
totals_df$percent
?fold
totals_df$percent %>% cumsum()
totals_df <- totals(data, !!quo_var, na.rm = na.rm) %>%
rename(percent = value) %>%
mutate(cumul_percent = cumsum(percent))
totals_df
table_df %>%
full_join(totals_df, by = chr_var)
document()
load_all()
totals_df <- totals(data, !!quo_var, na.rm = na.rm) %>%
rename(percent = value) %>%
mutate(cumul_percent = cumsum(percent))
totals_df
table_df %>%
full_join(totals_df, by = chr_var)
?table
table_df <- table(data[[chr_var]], useNA = "ifany") %>%
as.data.frame() %>%
as_tibble() %>%
rename(!!quo_var := Var1,
frequency = Freq)
totals_df <- totals(data, !!quo_var, na.rm = na.rm) %>%
rename(percent = value) %>%
mutate(cumul_percent = cumsum(percent))
table_df %>%
full_join(totals_df, by = chr_var)
load_all()
totals_df <- totals(data, !!quo_var, na.rm = na.rm) %>%
rename(percent = value) %>%
mutate(cumul_percent = cumsum(percent))
table_df %>%
full_join(totals_df, by = chr_var)
document()
load_all()
?frequency
load_all()
spss_freq(data, use_channelsr6)
?add_row
totals_df
totals_df %>% colSums()
?colSums()
totals_df %>% select(where(is.numeric))
totals_df %>% select(where(is.numeric)) %>% colSums()
out <- table_df %>%
full_join(totals_df, by = chr_var)
out
out %>% select(-!!quo_var)
out %>% select(-!!quo_var, -cumul_percent)
out %>% select(-!!quo_var, -cumul_percent) %>% colSums()
total_row <- out %>% select(-!!quo_var, -cumul_percent) %>% colSums() %>% as_tibble()
total_row
total_row <- out %>% select(-!!quo_var, -cumul_percent) %>% colSums() %>% as.data.frame()
total_row
out %>% select(-!!quo_var, -cumul_percent) %>% colSums()
out %>% select(-!!quo_var, -cumul_percent) %>% .colSums()
out %>% select(-!!quo_var, -cumul_percent) %>% map_dfc(sum)
total_row <- out %>% select(-!!quo_var, -cumul_percent) %>% map_dfc(sum)
out %>%
add_row(total_row)
total_row <- out %>%
select(-!!quo_var, -cumul_percent) %>%
map_dfc(sum) %>%
c(!!quo_var := "TOTAL")
total_row <- out %>%
select(-!!quo_var, -cumul_percent) %>%
map_dfc(sum) %>%
c(!!quo_var = "TOTAL")
total_row <- out %>%
select(-!!quo_var, -cumul_percent) %>%
map_dfc(sum) %>%
c(!!quo_var := "TOTAL")
total_row <- out %>%
select(-!!quo_var, -cumul_percent) %>%
map_dfc(sum) %>%
cquo_var = "TOTAL")
total_row <- out %>%
select(-!!quo_var, -cumul_percent) %>%
map_dfc(sum) %>%
c(quo_var = "TOTAL")
total_row
total_row <- out %>%
select(-!!quo_var, -cumul_percent) %>%
map_dfc(sum) %>%
c(!!quo_var = "TOTAL")
total_row <- out %>%
select(-!!quo_var, -cumul_percent) %>%
map_dfc(sum) %>%
mutate(!!quo_var = "TOTAL")
total_row <- out %>%
select(-!!quo_var, -cumul_percent) %>%
map_dfc(sum) %>%
mutate(!!quo_var := "TOTAL")
total_row
out %>%
add_row(total_row)
document()
load_all()
spss_freq(data, cv_ce)
spss_freq(data, cv_cer1)
spss_freq(data, cv_cer1, na.rm = FALSE)
spss_freq(data, cv_cer1, na.rm = TRUE)
out %>%
filter(!is.na(!!quo_var))
total_valid_row <- out %>%
filter(!is.na(!!quo_var)) %>%
select(-!!quo_var, -cumul_percent) %>%
map_dfc(sum) %>%
mutate(!!quo_var := "TOTAL")
total_valid_row
total_valid_row <- out %>%
filter(!is.na(!!quo_var)) %>%
select(-!!quo_var, -cumul_percent) %>%
map_dfc(sum) %>%
mutate(!!quo_var := "TOTAL - valid")
total_full_row <- out %>%
select(-!!quo_var, -cumul_percent) %>%
map_dfc(sum) %>%
mutate(!!quo_var := "TOTAL - full")
(out %>% filter(!is.na(!!quo_var))) %>%
add_row(total_valid_row) %>%
add_row(out %>% filter(is.na(!!quo_var)))
(out %>% filter(!is.na(!!quo_var))) %>%
add_row(total_valid_row) %>%
add_row(out %>% filter(is.na(!!quo_var))) %>%
add_row(total_full_row)
table_df
table_df %>% filter(is.na(!!quo_var))
table_df %>% filter(is.na(!!quo_var)) %>% nrow()
load_all()
spss_freq(data, use_channelsr4)
spss_freq(data, cv_channelsr4)
spss_freq(data, hcv_channelsr4)
spss_freq(data, hcv_channelcapsr3)
document()
load_all()
check()
build(path = "C:/Users/jmoncus/OneDrive - Gartner, Inc/Documents/builds/")
document()
load_all()
?full_join
document()
load_all()
check()
build(path = "C:/Users/jmoncus/OneDrive - Gartner, Inc/Documents/builds/")
bullseye <- data %>% select(starts_with("use_"),
starts_with("cv"),
starts_with("hcv"),
starts_with("fv"),
starts_with("hfv"))
bullseye %>%
names() %>%
purrr::set_names() %>%
walk(function(var) {
gutils:::spss_freq(data, var) %>%
greactable() %>%
print()
})
bullseye %>%
names() %>%
purrr::set_names()
bullseye %>%
names() %>%
purrr::set_names()[c(1:100)]
bullseye %>%
names() %>%
purrr::set_names() %>%
.[c(1:100)]
bullseye %>%
names() %>%
purrr::set_names() %>%
.[c(1:10)]
bullseye %>%
names() %>%
purrr::set_names() %>%
.[c(1:10)] %>%
walk(function(var) {
gutils:::spss_freq(data, var) %>%
greactable() %>%
print()
})
bullseye %>%
names() %>%
purrr::set_names() %>%
.[c(1)]
bullseye %>%
names() %>%
purrr::set_names() %>%
.[c(1)] %>%
walk(function(var) {
gutils:::spss_freq(data, var) %>%
greactable() %>%
print()
})
document()
load_all
load_all()
bullseye %>%
names() %>%
purrr::set_names() %>%
.[c(1)] %>%
walk(function(var) {
sym_var <- sym(var)
spss_freq(data, !!sym_var) %>%
greactable() %>%
print()
})
bullseye %>%
names() %>%
purrr::set_names() %>%
.[c(1:!0)] %>%
walk(function(var) {
sym_var <- sym(var)
spss_freq(data, !!sym_var) %>%
greactable() %>%
print()
})
bullseye %>%
names() %>%
purrr::set_names() %>%
.[c(1:10)] %>%
walk(function(var) {
sym_var <- sym(var)
spss_freq(data, !!sym_var) %>%
greactable() %>%
print()
})
bullseye %>%
names() %>%
purrr::set_names() %>%
.[c(1:100)] %>%
walk(function(var) {
sym_var <- sym(var)
spss_freq(data, !!sym_var) %>%
greactable() %>%
print()
})
library(devtools)
document()
load_all()
totals
?totals
totals
?get_totals
document()
load_all()
check()
folder <- "C:/Users/jmoncus/OneDrive - Gartner, Inc/Documents/Tech Bullseye/data"
file <- list.files(folder) %>% str_subset(pattern = "DATA")
library(tidyverse)
library(tidyverse)
library(openxlsx)
library(here)
library(here)
library(glue)
library(lubridate)
library(haven)
library(reactable)
library(knitr)
library(kableExtra)
folder <- "C:/Users/jmoncus/OneDrive - Gartner, Inc/Documents/Tech Bullseye/data"
file <- list.files(folder) %>% str_subset(pattern = "DATA")
data <- haven::read_sav(file = glue("{folder}/{file}")) %>% haven::as_factor()
# fix names
names(data)[which(names(data) == "Q44")] <- "job_title"
# from gutils
data <- data %>% lower_names()
# ever so slight data wrangling to fix PRM stuff
data <- data %>%
mutate(across(matches("oe$"), ~case_when(.x == "" ~ NA_character_,
TRUE ~ .x)))
# write a function that edits labels for viewing
neat <- function(data) {
data %>%
map_dfc(~structure(.x,
label = attr(.x, "label") %>%
str_extract(pattern = "(?<= - ).*$"))
)
}
totals(data, use_channelsr1)
totals(data, use_channelsr1, na.rm = TRUE)
totals(data, cv_channelsr1, na.rm = TRUE)
totals(data, cv_channelsr1, na.rm = FALSE)
totals(data, cv_channelsr1, na.rm = FALSE, digits = 0)
totals(data, cv_channelsr1, na.rm = FALSE, digits = 1)
totals(data, cv_channelsr1, na.rm = FALSE, digits = 2)
totals(data, cv_channelsr1, na.rm = FALSE, digits = 5)
totals(data, cv_channelsr1, na.rm = FALSE, digits = 10)
totals(data, cv_channelsr1, na.rm = FALSE, digits = 2, complete = TRUE)
totals(data, cv_channelsr1, na.rm = FALSE, digits = 2, complete = FALSE)
totals(data, hcv_channelsr1, na.rm = FALSE, digits = 2, complete = FALSE)
totals(data, hcv_channelsr1, na.rm = FALSE, digits = 2, complete = TRUE)
totals(data, hcv_channelsr1, na.rm = FALSE, digits = 2, complete = FALSE)
totals(data, hcv_channelsr1, na.rm = FALSE, digits = 0, complete = FALSE)
totals(data, hcv_channelsr1, na.rm = FALSE, digits = 1, complete = FALSE)
totals(data, hcv_channelsr1, na.rm = FALSE, digits = 2, complete = FALSE)
totals(data, hcv_channelsr1, na.rm = TRUE, digits = 2, complete = FALSE)
totals(data, hcv_channelsr1, na.rm = FALSE, digits = 2, complete = TRUE)
crosstab(data, hcv_channelsr1, barriers_speechr1, na.rm = FALSE, digits = 2, complete = TRUE)
crosstab(data, hcv_channelsr1, barriers_speechr1, na.rm = TRUE, digits = 2, complete = TRUE)
crosstab(data, hcv_channelsr1, barriers_speechr1, na.rm = FALSE, digits = 2, complete = TRUE)
crosstab(data, hcv_channelsr1, barriers_speechr1, na.rm = FALSE, digits = 2, complete = FALSE)
crosstab(data, hcv_channelsr1, barriers_speechr2, na.rm = FALSE, digits = 2, complete = FALSE)
crosstab(data, hcv_channelsr1, barriers_textr2, na.rm = FALSE, digits = 2, complete = FALSE)
crosstab(data, hcv_channelsr1, barriers_textr2, na.rm = TRUE, digits = 2, complete = FALSE)
crosstab(data, hcv_channelsr1, barriers_textr2, na.rm = FALSE, digits = 2, complete = FALSE)
crosstab(data, hcv_channelsr1, barriers_textr2, na.rm = FALSE, digits = 2, complete = TRUE)
n_table(data, barriers_text2)
n_table(data, barriers_textr2)
?n_table
document()
load_all()
check()
build(path = "C:/Users/jmoncus/OneDrive - Gartner, Inc/Documents/builds/")
document()
library(devtools)
document()
load_all()
library(tidyverse)
library(openxlsx)
library(here)
library(glue)
library(lubridate)
library(haven)
library(reactable)
library(knitr)
library(kableExtra)
folder <- "C:/Users/jmoncus/OneDrive - Gartner, Inc/Documents/Tech Bullseye/data"
file <- list.files(folder) %>% str_subset(pattern = "DATA")
data <- haven::read_sav(file = glue("{folder}/{file}")) %>% haven::as_factor()
# fix names
names(data)[which(names(data) == "Q44")] <- "job_title"
# from gutils
data <- data %>% lower_names()
# ever so slight data wrangling to fix PRM stuff
data <- data %>%
mutate(across(matches("oe$"), ~case_when(.x == "" ~ NA_character_,
TRUE ~ .x)))
# write a function that edits labels for viewing
neat <- function(data) {
data %>%
map_dfc(~structure(.x,
label = attr(.x, "label") %>%
str_extract(pattern = "(?<= - ).*$"))
)
}
```
# fix names
names(data)[which(names(data) == "Q44")] <- "job_title"
# from gutils
data <- data %>% lower_names()
# ever so slight data wrangling to fix PRM stuff
data <- data %>%
mutate(across(matches("oe$"), ~case_when(.x == "" ~ NA_character_,
TRUE ~ .x)))
# write a function that edits labels for viewing
neat <- function(data) {
data %>%
map_dfc(~structure(.x,
label = attr(.x, "label") %>%
str_extract(pattern = "(?<= - ).*$"))
)
}
bullseye <- data %>% select(starts_with("use_"),
starts_with("cv"),
starts_with("hcv"),
starts_with("fv"),
starts_with("hfv"))
spss_freq(data, fv_channelsr1)
spss_freq()
spss_freq
spss_freq()
spss_freq(data, fv_channelsr1)
spss_freq(data, fv_channelsr1, complete = FALSE)
spss_freq(data, fv_channelsr1, complete = TRUE)
spss_freq(data, fv_channelsr1, na.rm = TRUE, complete = TRUE)
spss_freq(data, fv_channelsr1, na.rm = FALSE, complete = TRUE)
spss_freq(data, fv_channelsr1, na.rm = TRUE, complete = TRUE)
document()
load_all()
spss_freq(data, fv_channelsr1)
spss_freq(data, fv_channelsr1, complete = FALSE)
spss_freq(data, fv_channelsr1, complete = TRUE)
spss_freq(data, fv_channelsr1, complete = FALSE)
spss_freq(data, fv_channelsr1, complete = TRUE)
document()
load_all()
spss_freq(data, fv_channelsr1, complete = TRUE)
spss_freq(data, fv_channelsr1)
spss_freq(data, fv_channelsr1, digits = 4)
spss_freq(data, fv_channelsr1, digits = 1)
spss_freq(data, cv_channelsr1, digits = 1)
spss_freq(data, barriers_speechr3, digits = 1)
check()
build(path = "C:/Users/jmoncus/OneDrive - Gartner, Inc/Documents/builds/")
library(devtools)
document()
load_all()
?some
document()
document()
load_all()
check()
mtcars
find_level(mtcars, 2)
library(tidyverse)
find_level(mtcars, 2)
iris
find_level(iris, virginica)
find_level(iris, "virginica")
glimpse(iris)
use_lifecycle()
build_readme()
build_readme()
build(path = "C:/Users/jmoncus/OneDrive - Gartner, Inc/Documents/builds/")
library(devtools)
document()
load_all()
document()
load_all()
build_readme()
check()
document()
load_all()
#' for building new local versions of gutils
#'
#' Run this when inside of the package project file
build(path = "C:/Users/jmoncus/OneDrive - Gartner, Inc/Documents/builds/")
